data=data_dummy, family="binomial"(link = "logit"),
control = glmerControl(optimizer="bobyqa"))
ss <- getME(mdl,c("theta","fixef"))
#ss <- getME(mdl,"ALL")
m3 <- update(
mdl,start=ss,control=glmerControl(
optimizer="bobyqa", optCtrl=list(maxfun=2e5)))
summary(m3)
# Post-hoc analysis
library(emmeans)
emt <- emtrends(m3, "OP_cap", var = "cond_orderapproach_first")
emt          # estimated slopes for each species
pairs(emt)   # pairwise comparisons of slopes
# Run mixed effects model
mdl <- glmer(
fora_response ~
OP_cap*cond_orderavoidance_first +
(1|subject_ID),
data=data_dummy, family="binomial"(link = "logit"),
control = glmerControl(optimizer="bobyqa"))
ss <- getME(mdl,c("theta","fixef"))
#ss <- getME(mdl,"ALL")
m3 <- update(
mdl,start=ss,control=glmerControl(
optimizer="bobyqa", optCtrl=list(maxfun=2e5)))
summary(m3)
emt <- emtrends(m3, "OP_cap", var = "cond_orderavoidance_first")
emt          # estimated slopes for each species
pairs(emt)   # pairwise comparisons of slopes
# Run mixed effects model
mdl <- glmer(
fora_response ~
OP_cap*conditino_rORp + cond_orderavoidance_first +
(1|subject_ID),
data=data_dummy, family="binomial"(link = "logit"),
control = glmerControl(optimizer="bobyqa"))
ss <- getME(mdl,c("theta","fixef"))
#ss <- getME(mdl,"ALL")
m3 <- update(
mdl,start=ss,control=glmerControl(
optimizer="bobyqa", optCtrl=list(maxfun=2e5)))
summary(m3)
# Run mixed effects model
mdl <- glmer(
fora_response ~
OP_cap*cond_orderavoidance_first + conditino_rORp +
(1|subject_ID),
data=data_dummy, family="binomial"(link = "logit"),
control = glmerControl(optimizer="bobyqa"))
ss <- getME(mdl,c("theta","fixef"))
#ss <- getME(mdl,"ALL")
m3 <- update(
mdl,start=ss,control=glmerControl(
optimizer="bobyqa", optCtrl=list(maxfun=2e5)))
summary(m3)
# Run mixed effects model
mdl <- glmer(
fora_response ~
OP_cap*cond_orderavoidance_first + conditino_rORp +
(1|subject_ID),
data=data_dummy, family="binomial"(link = "logit"),
control = glmerControl(optimizer="bobyqa"))
# Run mixed effects model
mdl <- glmer(
fora_response ~
OP_cap*cond_orderavoidance_first + condition_rORp +
(1|subject_ID),
data=data_dummy, family="binomial"(link = "logit"),
control = glmerControl(optimizer="bobyqa"))
ss <- getME(mdl,c("theta","fixef"))
#ss <- getME(mdl,"ALL")
m3 <- update(
mdl,start=ss,control=glmerControl(
optimizer="bobyqa", optCtrl=list(maxfun=2e5)))
summary(m3)
# Run mixed effects model
mdl <- glmer(
fora_response ~
OP_cap*condition_rORp + cond_orderavoidance_first +
(1|subject_ID),
data=data_dummy, family="binomial"(link = "logit"),
control = glmerControl(optimizer="bobyqa"))
ss <- getME(mdl,c("theta","fixef"))
#ss <- getME(mdl,"ALL")
m3 <- update(
mdl,start=ss,control=glmerControl(
optimizer="bobyqa", optCtrl=list(maxfun=2e5)))
summary(m3)
# Post-hoc analysis
library(emmeans)
emt <- emtrends(model, ~ OP_cap + condition_rORp + cond_orderavoidance_first,
at = list(OP_cap = c(-1, 1)),
cov.reduce = list(cond_orderavoidance_first = mean_sd)) %>%
contrast(interaction = c("pairwise", "pairwise"),
by = "cond_orderavoidance_first")
library(magrittr) # 1.5
emt <- emtrends(model, ~ OP_cap + condition_rORp + cond_orderavoidance_first,
at = list(OP_cap = c(-1, 1)),
cov.reduce = list(cond_orderavoidance_first = mean_sd)) %>%
contrast(interaction = c("pairwise", "pairwise"),
by = "cond_orderavoidance_first")
emt <- emtrends(model, ~ OP_cap + condition_rORp + cond_orderavoidance_first,
at = list(OP_cap = c(-1, 1)),
cov.reduce = list(cond_orderavoidance_first = mean_sd),
trans = "response") %>%
contrast(interaction = c("pairwise", "pairwise"),
by = "cond_orderavoidance_first")
emt <- emtrends(m3, ~ OP_cap + condition_rORp + cond_orderavoidance_first,
at = list(OP_cap = c(-1, 1)),
cov.reduce = list(cond_orderavoidance_first = mean_sd),
trans = "response") %>%
contrast(interaction = c("pairwise", "pairwise"),
by = "cond_orderavoidance_first")
# Run mixed effects model
mdl <- glmer(
fora_response ~
condition_rORp*cond_orderavoidance_first + OP_cap +
(1|subject_ID),
data=data_dummy, family="binomial"(link = "logit"),
control = glmerControl(optimizer="bobyqa"))
ss <- getME(mdl,c("theta","fixef"))
#ss <- getME(mdl,"ALL")
m3 <- update(
mdl,start=ss,control=glmerControl(
optimizer="bobyqa", optCtrl=list(maxfun=2e5)))
summary(m3)
# Run mixed effects model
mdl <- glmer(
fora_response ~
OP_cap*condition_rORp+cond_orderavoidance_first +
(1|subject_ID),
data=data_dummy, family="binomial"(link = "logit"),
control = glmerControl(optimizer="bobyqa"))
ss <- getME(mdl,c("theta","fixef"))
#ss <- getME(mdl,"ALL")
m3 <- update(
mdl,start=ss,control=glmerControl(
optimizer="bobyqa", optCtrl=list(maxfun=2e5)))
summary(m3)
# Post-hoc analysis
library(emmeans)
emmeans(m3, list(pairwise ~ cond_orderavoidance_first), adjust = "tukey")
emmeans(m3, list(pairwise ~ condition_rORp), adjust = "tukey")
# Run mixed effects model
mdl <- glmer(
fora_response ~
OP_cap+condition_rORp+cond_orderavoidance_first +
(1|subject_ID),
data=data_dummy, family="binomial"(link = "logit"),
control = glmerControl(optimizer="bobyqa"))
ss <- getME(mdl,c("theta","fixef"))
#ss <- getME(mdl,"ALL")
m3 <- update(
mdl,start=ss,control=glmerControl(
optimizer="bobyqa", optCtrl=list(maxfun=2e5)))
summary(m3)
# Post-hoc analysis
library(emmeans)
emmeans(m3, list(pairwise ~ condition_rORp), adjust = "tukey")
emmeans(m3, list(pairwise ~ cond_orderavoidance_first), adjust = "tukey")
emmeans(m3, list(pairwise ~ OP_cap), adjust = "tukey")
# Run mixed effects model
mdl <- glmer(
fora_response ~
OP_cap+condition_rORp +
(1|subject_ID),
data=data_dummy, family="binomial"(link = "logit"),
control = glmerControl(optimizer="bobyqa"))
ss <- getME(mdl,c("theta","fixef"))
#ss <- getME(mdl,"ALL")
m3 <- update(
mdl,start=ss,control=glmerControl(
optimizer="bobyqa", optCtrl=list(maxfun=2e5)))
summary(m3)
# Post-hoc analysis
library(emmeans)
emmeans(m3, list(pairwise ~ OP_cap), adjust = "tukey")
# Run mixed effects model
mdl <- glmer(
fora_response ~
OP_cap*condition_rORp + cond_orderavoidance_first +
(1|subject_ID),
data=data_dummy, family="binomial"(link = "logit"),
control = glmerControl(optimizer="bobyqa"))
ss <- getME(mdl,c("theta","fixef"))
#ss <- getME(mdl,"ALL")
m3 <- update(
mdl,start=ss,control=glmerControl(
optimizer="bobyqa", optCtrl=list(maxfun=2e5)))
summary(m3)
# Post-hoc analysis
library(emmeans)
emmeans(m3, list(pairwise ~ OP_cap), adjust = "tukey")
# Run mixed effects model
mdl <- glmer(
fora_response ~
OP_cap*cond_orderavoidance_first + condition_rORp +
(1|subject_ID),
data=data_dummy, family="binomial"(link = "logit"),
control = glmerControl(optimizer="bobyqa"))
ss <- getME(mdl,c("theta","fixef"))
#ss <- getME(mdl,"ALL")
m3 <- update(
mdl,start=ss,control=glmerControl(
optimizer="bobyqa", optCtrl=list(maxfun=2e5)))
summary(m3)
# Post-hoc analysis
library(emmeans)
emmeans(m3, list(pairwise ~ OP_cap), adjust = "tukey")
emmeans(m3, list(pairwise ~ cond_orderavoidance_first), adjust = "tukey")
emmeans(m3, list(pairwise ~ condition_rORp), adjust = "tukey")
# Test significance
anova(m3)
# Run mixed effects model
mdl <- glmer(
fora_response ~
OP_cap*cond_orderavoidance_first*condition_rORp +
(1|subject_ID),
data=data_dummy, family="binomial"(link = "logit"),
control = glmerControl(optimizer="bobyqa"))
ss <- getME(mdl,c("theta","fixef"))
#ss <- getME(mdl,"ALL")
m3 <- update(
mdl,start=ss,control=glmerControl(
optimizer="bobyqa", optCtrl=list(maxfun=2e5)))
summary(m3)
# Test significance
anova(m3)
# Run mixed effects model
mdl <- glmer(
fora_response ~
OP_cap*cond_order*condition_rORp +
(1|subject_ID),
data=data_dummy, family="binomial"(link = "logit"),
control = glmerControl(optimizer="bobyqa"))
ss <- getME(mdl,c("theta","fixef"))
#ss <- getME(mdl,"ALL")
m3 <- update(
mdl,start=ss,control=glmerControl(
optimizer="bobyqa", optCtrl=list(maxfun=2e5)))
summary(m3)
# Test significance
anova(m3)
# Post-hoc analysis
library(emtrends)
install.packages('emtrends')
# Post-hoc analysis
library(emmeans)
emt1 <- emtrends(m3, "cond_order", var = "OP_cap")
# Run mixed effects model
mdl <- glmer(
fora_response ~
OP_cap*condition_rORp+cond_order +
(1|subject_ID),
data=data_dummy, family="binomial"(link = "logit"),
control = glmerControl(optimizer="bobyqa"))
ss <- getME(mdl,c("theta","fixef"))
#ss <- getME(mdl,"ALL")
m3 <- update(
mdl,start=ss,control=glmerControl(
optimizer="bobyqa", optCtrl=list(maxfun=2e5)))
summary(m3)
# Test significance
anova(m3)
# Post-hoc analysis
library(emmeans)
emt1 <- emtrends(m3, "cond_order", var = "OP_cap")
emt1          ### estimated slopes of ZcNOF for each level of Old_Lure
pairs(emt1)   ### comparison of slopes
# Run mixed effects model
mdl <- glmer(
fora_response ~
OP_cap+condition_rORp+cond_order +
(1|subject_ID),
data=data_dummy, family="binomial"(link = "logit"),
control = glmerControl(optimizer="bobyqa"))
ss <- getME(mdl,c("theta","fixef"))
#ss <- getME(mdl,"ALL")
m3 <- update(
mdl,start=ss,control=glmerControl(
optimizer="bobyqa", optCtrl=list(maxfun=2e5)))
summary(m3)
# Test significance
anova(m3)
# Post-hoc analysis
library(emmeans)
emt1 <- emtrends(m3, "condition_rORp", var = "OP_cap")
emt1          ### estimated slopes of ZcNOF for each factor level
pairs(emt1)   ### comparison of slopes
# Run mixed effects model
mdl <- glmer(
fora_response ~
OP_cap*condition_rORp*cond_order +
(1|subject_ID),
data=data_dummy, family="binomial"(link = "logit"),
control = glmerControl(optimizer="bobyqa"))
ss <- getME(mdl,c("theta","fixef"))
#ss <- getME(mdl,"ALL")
m3 <- update(
mdl,start=ss,control=glmerControl(
optimizer="bobyqa", optCtrl=list(maxfun=2e5)))
summary(m3)
# Post-hoc analysis
library(emmeans)
emt1 <- emtrends(m3, "condition_rORp", var = "OP_cap")
# Run mixed effects model
mdl <- glmer(
fora_response ~
OP_cap*cond_order +
(1|subject_ID),
data=data_dummy, family="binomial"(link = "logit"),
control = glmerControl(optimizer="bobyqa"))
ss <- getME(mdl,c("theta","fixef"))
#ss <- getME(mdl,"ALL")
m3 <- update(
mdl,start=ss,control=glmerControl(
optimizer="bobyqa", optCtrl=list(maxfun=2e5)))
summary(m3)
coef(m3)
library(QuantPsyc)
install.packages('QuantPsych')
library(QuantPsyc)
library(QuantPsyc)
m3.results
# ==============================================================================
# Comparing logistic stats models (mixed effects) of policy interaction with
# forest condition (low and high threat containing forest; fixed effects)
# when controlling for subject variance (random effects)
# ==============================================================================
# Packages
library(readr)
library(lme4)
library(ggeffects)
library(splines)
library(ggplot2)
filepath <- paste(dirname(rstudioapi::getSourceEditorContext()$path), "/", sep = "")
# Set working directory
setwd(filepath)
# Data import
df_allSubs <- read_csv("DATA_clean/DATA_group_level/test_data.group_level_datall.csv")
# Add WWS model and bin_e
df_allSubs['bin_e_state'] <- df_allSubs['** binary energy state']
df_allSubs['wait_when_safe'] <- df_allSubs['** wait when safe']
df_allSubs['OP_values'] <- df_allSubs['optimal policy values']
df_allSubs['MHP_model'] <- df_allSubs['multi-heuristic policy']
df_allSubs['OP_cap'] <- df_allSubs["OP_cap"]
# Run mixed effects model
mdl <- glmer(
fora_response ~
OP_cap*condition_rORp +
(1|subject_ID),
data=df_allSubs, family="binomial"(link = "logit"),
control = glmerControl(optimizer="bobyqa"))
ss <- getME(mdl,c("theta","fixef"))
#ss <- getME(mdl,"ALL")
m3 <- update(
mdl,start=ss,control=glmerControl(
optimizer="bobyqa", optCtrl=list(maxfun=2e5)))
summary(m3)
# Predictions for plot
ggpredict(m3, terms="p_succ_correct [all]")
library(effects)
my.eff <- Effect(c("cond_order"), m3)
my.eff <- Effect(c("OP_cap", "cond_order"), fm)
my.eff <- Effect(c("OP_cap", "cond_order"), m3)
# Run mixed effects model
mdl <- glmer(
fora_response ~
OP_cap*cond_order +
(1|subject_ID),
data=data_dummy, family="binomial"(link = "logit"),
control = glmerControl(optimizer="bobyqa"))
ss <- getME(mdl,c("theta","fixef"))
#ss <- getME(mdl,"ALL")
m3 <- update(
mdl,start=ss,control=glmerControl(
optimizer="bobyqa", optCtrl=list(maxfun=2e5)))
summary(m3)
library(effects)
my.eff <- Effect(c("OP_cap", "cond_order"), m3)
plot(my.eff)
summary(my.eff)
aov <- anova(m3)
aov
ranova(m3)
library(lmerTest)
aov <- anova(m3)
ranova(m3)
ft = m3.fit()
# Run mixed effects model
mdl <- glmer(
fora_response ~
OP_cap +
(OP_cap|cond_order/subject_ID),
data=data_dummy, family="binomial"(link = "logit"),
control = glmerControl(optimizer="bobyqa"))
# Run mixed effects model
mdl <- glmer(
fora_response ~
OP_cap +
(OP_cap|cond_order:subject_ID),
data=data_dummy, family="binomial"(link = "logit"),
control = glmerControl(optimizer="bobyqa"))
ss <- getME(mdl,c("theta","fixef"))
#ss <- getME(mdl,"ALL")
m3 <- update(
mdl,start=ss,control=glmerControl(
optimizer="bobyqa", optCtrl=list(maxfun=2e5)))
summary(m3)
# Run mixed effects model
mdl <- glmer(
fora_response ~
OP_cap +
(OP_cap|cond_order:subject_ID),
data=data_dummy, family="binomial"(link = "logit"),
control = glmerControl(optimizer="bobyqa"))
confint(m3)
# Run mixed effects model
mdl <- glmer(
fora_response ~
OP_cap*cond_order +
(cond_order|subject_ID),
data=data_dummy, family="binomial"(link = "logit"),
control = glmerControl(optimizer="bobyqa"))
# Run mixed effects model
mdl <- glmer(
fora_response ~
OP_cap +
(cond_order|subject_ID),
data=data_dummy, family="binomial"(link = "logit"),
control = glmerControl(optimizer="bobyqa"))
summary(m3)
dfbetas <- as.data.frame(dfbetas(m3))
dfbetas <- as.data.frame(dffits(m3))
# Run mixed effects model
mdl <- glmer(
fora_response ~
OP_cap * cond_order +
(1|subject_ID),
data=data_dummy, family="binomial"(link = "logit"),
control = glmerControl(optimizer="bobyqa"))
ss <- getME(mdl,c("theta","fixef"))
#ss <- getME(mdl,"ALL")
m3 <- update(
mdl,start=ss,control=glmerControl(
optimizer="bobyqa", optCtrl=list(maxfun=2e5)))
summary(m3)
dfbetas <- as.data.frame(dfbetas(m3))
summary(glht(m3, mcp(OP_cap="Tukey")))
library(multcomp)
summary(glht(m3, mcp(OP_cap="Tukey")))
summary(glht(m3, mcp(cond_order="Tukey")))
summary(glht(m3, mcp(sxt="Tukey")))
# Dummy code condition order
#data_dummy <- data.frame(df_allSubs[ , ! colnames(df_allSubs) %in% "x1"], model.matrix( ~ cond_order - 1, df_allSubs))
# Run mixed effects model
mdl <- glmer(
fora_response ~
OP_cap * cond_order +
(1|subject_ID),
data=df_allSubs, family="binomial"(link = "logit"),
control = glmerControl(optimizer="bobyqa"))
# Data import
df_allSubs <- read_csv("DATA_clean/DATA_group_level/datall_with_condition_order.csv")
# Add WWS model and bin_e
df_allSubs['bin_e_state'] <- df_allSubs['** binary energy state']
df_allSubs['wait_when_safe'] <- df_allSubs['** wait when safe']
df_allSubs['OP_values'] <- df_allSubs['optimal policy values']
df_allSubs['MHP_model'] <- df_allSubs['multi-heuristic policy']
df_allSubs['OP_cap'] <- df_allSubs["OP_cap"]
# Dummy code condition order
#data_dummy <- data.frame(df_allSubs[ , ! colnames(df_allSubs) %in% "x1"], model.matrix( ~ cond_order - 1, df_allSubs))
# Run mixed effects model
mdl <- glmer(
fora_response ~
OP_cap * cond_order +
(1|subject_ID),
data=df_allSubs, family="binomial"(link = "logit"),
control = glmerControl(optimizer="bobyqa"))
ss <- getME(mdl,c("theta","fixef"))
#ss <- getME(mdl,"ALL")
m3 <- update(
mdl,start=ss,control=glmerControl(
optimizer="bobyqa", optCtrl=list(maxfun=2e5)))
summary(m3)
sxt<- interaction(df_allSubs$OP_cap,df_allSubs$cond_order)
sxt
glm.posthoc <- glm(fora_response~-1 + sxt, data=df_allSubs,family="binomial", weights=rep(10, nrow(surv)))
glm.posthoc <- glm(fora_response~-1 + sxt, data=df_allSubs,family="binomial", weights=rep(10, nrow(df_allSubs)))
summary(glht(glm.posthoc, mcp(cond_order="Tukey")))
glm.posthoc <- glm(fora_response~-1 + cond_order, data=df_allSubs,family="binomial", weights=rep(10, nrow(df_allSubs)))
summary(glht(glm.posthoc, mcp(cond_order="Tukey")))
# Dummy code condition order
#data_dummy <- data.frame(df_allSubs[ , ! colnames(df_allSubs) %in% "x1"], model.matrix( ~ cond_order - 1, df_allSubs))
# Run mixed effects model
mdl <- glmer(
fora_response ~
OP_cap * cond_order +
(1|subject_ID),
data=df_allSubs, family="binomial"(link = "logit"),
control = glmerControl(optimizer="bobyqa"))
ss <- getME(mdl,c("theta","fixef"))
#ss <- getME(mdl,"ALL")
m3 <- update(
mdl,start=ss,control=glmerControl(
optimizer="bobyqa", optCtrl=list(maxfun=2e5)))
summary(m3)
# Post hoc test
library(multcomp)
df_allSubs$sxt <- interaction(df_allSubs$OP_cap,df_allSubs$cond_order)
glm.posthoc <- glm(fora_response~-1 + sxt, data=df_allSubs,family="binomial", weights=rep(10, nrow(df_allSubs)))
summary(glht(glm.posthoc, mcp(sxt="Tukey")))
